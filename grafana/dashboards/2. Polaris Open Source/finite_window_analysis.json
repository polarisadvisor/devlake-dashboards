{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": false,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 47,
  "links": [],
  "panels": [
    {
      "datasource": {
        "default": false,
        "type": "mysql",
        "uid": "mysql"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 2,
              "type": "symlog"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "residence_time"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 5
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.showPoints",
                "value": "always"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_residence_time"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed",
                  "seriesBy": "max"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_cycle_time"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "fill": "solid"
                }
              },
              {
                "id": "custom.pointSize",
                "value": 1
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cycle_time"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.drawStyle",
                "value": "points"
              },
              {
                "id": "custom.pointSize",
                "value": 12
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "window_size"
            },
            "properties": [
              {
                "id": "custom.pointSize",
                "value": 1
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "age"
            },
            "properties": [
              {
                "id": "custom.pointSize",
                "value": 12
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hoverProximity": 5,
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "dataset": "lake",
          "datasource": {
            "type": "mysql",
            "uid": "mysql"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH observation_window AS (\n  SELECT \n    $__timeFrom() AS window_start, \n    $__timeTo() AS window_end\n),\n\nconversion_factor AS (\n  SELECT \n    CASE \n      WHEN '${unit}' = 'DAY' THEN 86400\n      WHEN '${unit}' = 'HOUR' THEN 3600\n      WHEN '${unit}' = 'WEEK' THEN 604800\n      WHEN '${unit}' = 'MONTH' THEN 2592000\n      ELSE 86400 -- Default to days\n    END AS factor\n),\n\nprs_with_metrics AS (\n  SELECT \n    pr.id,\n    pr.created_date,\n    pr.merged_date,\n    ow.window_start,\n    ow.window_end,\n    cf.factor,\n\n    -- Residence Time Calculation (with Fractional Values)\n    CASE \n      WHEN pr.created_date >= ow.window_start AND pr.merged_date <= ow.window_end \n        THEN TIMESTAMPDIFF(SECOND, pr.created_date, pr.merged_date) / cf.factor -- Case #1\n      WHEN pr.created_date < ow.window_start AND pr.merged_date > ow.window_end \n        THEN TIMESTAMPDIFF(SECOND, ow.window_start, ow.window_end) / cf.factor -- Case #2 (window length)\n      WHEN pr.created_date < ow.window_start AND pr.merged_date <= ow.window_end \n        THEN TIMESTAMPDIFF(SECOND, ow.window_start, pr.merged_date) / cf.factor -- Case #3\n      WHEN pr.merged_date IS NULL OR pr.merged_date > ow.window_end\n        THEN TIMESTAMPDIFF(SECOND, GREATEST(pr.created_date,ow.window_start), ow.window_end) / cf.factor -- Case #4 and #5\n    END AS residence_time,\n\n    -- Cycle Time Calculation (only for PRs that merged within the window, with fractions)\n    CASE \n      WHEN pr.merged_date BETWEEN ow.window_start AND ow.window_end \n        THEN TIMESTAMPDIFF(SECOND, pr.created_date, pr.merged_date) / cf.factor\n      ELSE NULL\n    END AS cycle_time,\n\n    CASE \n      WHEN pr.merged_date is NULL \n        THEN TIMESTAMPDIFF(SECOND, pr.created_date, ow.window_end) / cf.factor\n      ELSE NULL\n    END AS age\n\n  FROM pull_requests pr\n  JOIN observation_window ow\n  JOIN conversion_factor cf\n  WHERE pr.created_date <= ow.window_end\n    AND (pr.merged_date IS NULL OR pr.merged_date between ow.window_start and ow.window_end)\n)\n\nSELECT \n\n  \n  COALESCE(merged_date, window_end) as end_date,\n  merged_date,\n  window_end,\n  created_date,\n  cycle_time,\n  age,\n  residence_time,\n  \n \n\n  -- Average Residence Time for all PRs in the window (with fractions)\n  AVG(residence_time) OVER () AS avg_residence_time,\n\n  -- Average Cycle Time only across closed PRs (with fractions)\n  (SELECT AVG(cycle_time) FROM prs_with_metrics WHERE cycle_time IS NOT NULL) AS avg_cycle_time,\n  TIMESTAMPDIFF(SECOND, window_start, window_end) / factor as window_size\n\nFROM prs_with_metrics\n\nORDER BY created_date;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "PR Residence Time/Time to Merge/Age Scatter Plot ",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "mysql",
        "uid": "mysql"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 2,
              "type": "symlog"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg_cycle_time",
                  "avg_residence_time"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hoverProximity": 5,
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "dataset": "lake",
          "datasource": {
            "type": "mysql",
            "uid": "mysql"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH RECURSIVE observation_window AS (\n  SELECT \n    $__timeFrom() AS window_start, \n    $__timeTo() AS window_end\n),\n\nconversion_factor AS (\n  SELECT \n    CASE \n      WHEN '${unit}' = 'DAY' THEN 86400\n      WHEN '${unit}' = 'HOUR' THEN 3600\n      WHEN '${unit}' = 'WEEK' THEN 604800\n      WHEN '${unit}' = 'MONTH' THEN 2592000\n      ELSE 86400 -- Default to days\n    END AS factor\n),\n\naggregation_windows AS (\n  -- Recursive CTE to generate non-overlapping aggregation windows\n  SELECT \n    window_start AS current_start,\n    TIMESTAMPADD(SECOND, (${window} * cf.factor), window_start) AS current_end\n  FROM observation_window ow\n  JOIN conversion_factor cf\n  WHERE window_start < window_end\n\n  UNION ALL\n\n  SELECT \n    TIMESTAMPADD(SECOND, (${window} * cf.factor), current_start),\n    TIMESTAMPADD(SECOND, (${window} * cf.factor), current_end)\n  FROM aggregation_windows\n  JOIN observation_window ow\n  JOIN conversion_factor cf\n  WHERE current_end < ow.window_end\n),\n\nprs_with_metrics AS (\n  SELECT \n    aw.current_start AS window_start,\n    aw.current_end AS window_end,\n    pr.id,\n    pr.created_date,\n    pr.merged_date,\n    cf.factor,\n\n    -- Residence Time Calculation for each aggregation window\n    CASE \n      WHEN pr.created_date >= aw.current_start AND pr.merged_date <= aw.current_end \n        THEN TIMESTAMPDIFF(SECOND, pr.created_date, pr.merged_date) / cf.factor \n      WHEN pr.created_date < aw.current_start AND pr.merged_date > aw.current_end \n        THEN TIMESTAMPDIFF(SECOND, aw.current_start, aw.current_end) / cf.factor \n      WHEN pr.created_date < aw.current_start AND pr.merged_date <= aw.current_end \n        THEN TIMESTAMPDIFF(SECOND, aw.current_start, pr.merged_date) / cf.factor \n      WHEN pr.merged_date IS NULL OR pr.merged_date > aw.current_end\n        THEN TIMESTAMPDIFF(SECOND, GREATEST(pr.created_date, aw.current_start), aw.current_end) / cf.factor \n    END AS residence_time,\n\n    -- Cycle Time Calculation (only for PRs that merged within this window)\n    CASE \n      WHEN pr.merged_date BETWEEN aw.current_start AND aw.current_end \n        THEN TIMESTAMPDIFF(SECOND, pr.created_date, pr.merged_date) / cf.factor\n      ELSE NULL\n    END AS cycle_time\n\n  FROM pull_requests pr\n  JOIN aggregation_windows aw \n    ON pr.created_date <= aw.current_end \n    AND (pr.merged_date IS NULL OR pr.merged_date >= aw.current_start)\n  JOIN conversion_factor cf\n),\n\nwindowed_averages AS (\n  -- Compute per-window averages\n  SELECT \n    LEAST(window_end, $__timeTo()) AS end_date,\n    AVG(cycle_time) AS avg_cycle_time,\n    AVG(residence_time) AS avg_residence_time\n  FROM prs_with_metrics\n  GROUP BY window_end\n),\n\noverall_average AS (\n  -- Compute the overall averages across the entire observation window\n  SELECT \n    AVG(cycle_time) AS overall_avg_cycle_time,\n    AVG(residence_time) AS overall_avg_residence_time\n  FROM prs_with_metrics\n)\n\n-- Join to ensure the overall average appears in each row\nSELECT \n  wa.end_date,\n  wa.avg_cycle_time,\n  wa.avg_residence_time,\n  oa.overall_avg_cycle_time,\n  oa.overall_avg_residence_time\nFROM windowed_averages wa\nJOIN overall_average oa\nORDER BY wa.end_date;\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "PR Residence Time/Time to Merge/Age Scatter Plot by Window",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "DAY",
          "value": "DAY"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Unit",
        "multi": false,
        "name": "unit",
        "options": [
          {
            "selected": false,
            "text": "HOUR",
            "value": "HOUR"
          },
          {
            "selected": true,
            "text": "DAY",
            "value": "DAY"
          },
          {
            "selected": false,
            "text": "WEEK",
            "value": "WEEK"
          },
          {
            "selected": false,
            "text": "MONTH",
            "value": "MONTH"
          }
        ],
        "query": "HOUR, DAY, WEEK, MONTH",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {},
        "hide": 0,
        "label": "Window",
        "name": "window",
        "options": [],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Finite Window Analysis",
  "uid": "finite-window-analysis",
  "version": 29,
  "weekStart": ""
}